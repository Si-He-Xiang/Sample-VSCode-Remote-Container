{
	"name": "Python Sample",
	"image": "sample-python",
	"dockerFile": "alpine.Dockerfile",

	// Use 'appPort' to create a container with published ports. If the port isn't working, be sure
	// your server accepts connections from all interfaces (0.0.0.0 or '*'), not just localhost.
	// In this case, "--host 0.0.0.0 --port 9000" needs to be passed into Flask to make this happen.
	// "appPort": ["0.0.0.0:9000:9000"],

	// Comment out the next line to run as root instead. Linux users, 
	// update Dockerfile with your user's UID/GID if not 1000.
	"runArgs": [
		"--name=sample-python",
		"-u", "vscode",
		// "-v","v-sample-python-vscode-server:/home/vscode/.vscode-server",
		// "-v","v-sample-python-vscode-server-insiders:/home/vscode/.vscode-server-insiders"
	],

	// Use 'settings' to set *default* container specific settings.json values on container create. 
	// You can edit these settings after create using File > Preferences > Settings > Remote.
	"settings": { 
		"terminal.integrated.shell.linux": "/bin/bash",
		"python.pythonPath": "/usr/bin/python3",
		"python.linting.pylintEnabled": true,
		"python.linting.pylintPath": "/usr/bin/pylint",
		"python.linting.enabled": true
	},

	// Specifies a command to run after the container is created
	"postCreateCommand": "git config --global user.email \"si_he_xiang@163.com\" && git config --global user.name \"SHX\" && if [ ! -d /workspace/Sample-VSCode-Remote-Container ]; then cd /workspace ; sudo git clone -b feature/sample-python  https://github.com/Si-He-Xiang/Sample-VSCode-Remote-Container.git ; sudo chown -R vscode:vscode ./Sample-VSCode-Remote-Container ; fi && sudo pip install -r /workspace/Sample-VSCode-Remote-Container/requirements.txt -i https://mirrors.aliyun.com/pypi/simple/",

	"extensions": [
		"ms-python.python"
	],

	"workspaceMount":"type=volume,source=v-sample-python,destination=/workspace",
	"workspaceFolder":"/workspace/Sample-VSCode-Remote-Container"
}
